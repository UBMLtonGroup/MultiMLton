(*  Copyright (c) 2001 Anthony L Shipman *)

(* $Id: config.grm,v 1.3 2001/05/15 01:52:57 felix Exp $ *)

(*  This is the grammar for the configuration file language.

*)

    open Common
    open ConfigTypes

%%

%eop EOF 

(* %pos declares the type of positions for terminals.
   Each symbol has an associated left and right position. *)

%pos Common.SrcPos
%arg (file): string

%term 	
	  KW_SERVER
	| KW_NODE

	| SYM_SEMICOLON
	| SYM_COMMA
	| SYM_LBRACE
	| SYM_RBRACE
	| SYM_EQUALS
	| SYM_SWERVE

	| TOK_WORD of string
	| TOK_STRING of string 
	| TOK_INT of int 

	| EOF


%nonterm 
	  start of Section list
	| section_list of Section list
	| section of Section 
	| part_list of SectionPart list
	| part of SectionPart 
	| literal_list of Literal list
	| literal of Literal 



%name Config

%noshift EOF
%pure
%verbose

%%

start:
	section_list			(section_list)

    |	SYM_SWERVE
	part_list			([SectSwerve {
					    parts = part_list
					    }])

section_list:	
	section				([section])

    |   section_list 
	section				(section_list @ [section])


section:
	KW_SERVER 
	SYM_LBRACE
	part_list
	SYM_RBRACE			(SectServer {
					    parts = part_list,
					    pos   = KW_SERVERleft
					    })
    |	KW_NODE 
	TOK_WORD
	SYM_LBRACE
	part_list
	SYM_RBRACE			(SectNode {
					    path  = TOK_WORD,
					    parts = part_list,
					    pos   = KW_NODEleft
					    })

part_list:	
	part				([part])

    |   part_list 
	part				(part_list @ [part])


part:
	TOK_WORD SYM_EQUALS
	literal_list
	SYM_SEMICOLON			(SectionPart {
					    left  = TOK_WORD,
					    right = literal_list,
					    pos   = TOK_WORDleft
					    })


literal_list:	
	literal				([literal])

    |   literal_list 
	literal				(literal_list @ [literal])


literal:
	TOK_STRING			(LitIsString (TOK_STRING, TOK_STRINGleft))
    |	TOK_INT				(LitIsInt (TOK_INT, TOK_INTleft))
    |	TOK_WORD			(LitIsString (TOK_WORD, TOK_WORDleft))

(*-------------------------------------------------------------------------*)

